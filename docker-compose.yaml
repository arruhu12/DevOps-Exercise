version: "3.5"
services:
  api-gateway:
    build: ./gateway_api
    restart: always
    networks:
      sawit-backend:
        ipv4_address: 192.168.10.2
    volumes:
      - ./gateway_api:/app/gateway_api
      - ./gateway_api/nodemon.json:/app/gateway_api/nodemon.json
      - ./gateway_api/tsconfig.json:/app/gateway_api/tsconfig.json
      - ./gateway_api/.env:/app/gateway_api/.env
    ports:
      - "8000:8000"
    command: npm run dev
    depends_on:
      - mysql
  
  data-management-service:
    build: ./services/data_management
    restart: always
    networks:
      sawit-backend:
        ipv4_address: 192.168.10.3
    volumes:
      - ./services/data_management:/app/services/data_management
    depends_on:
      - mysql

  subscription-service:
    build: ./services/subscription
    restart: always
    networks:
      sawit-backend:
        ipv4_address: 192.168.10.4
    volumes:
      - ./services/subscription:/app/services/subscription
    depends_on:
      - mysql
  
  transaction-service:
    build: ./services/transaction
    restart: always
    networks:
      sawit-backend:
        ipv4_address: 192.168.10.5
    volumes:
      - ./services/transaction:/app/services/transaction
    depends_on:
      - mysql

  report-service:
    build: ./services/report
    restart: always
    networks:
      sawit-backend:
        ipv4_address: 192.168.10.6
    volumes:
      - ./services/report:/app/services/report
    depends_on:
      - mysql

  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'sawit-mysql:/var/lib/mysql'
      - './scripts/database.sql:/docker-entrypoint-initdb.d/1.sql'
    networks:
      sawit-backend:
        ipv4_address: 192.168.10.7
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
        - '1025:1025'
        - '8025:8025'
    networks:
      sawit-backend:
        ipv4_address: 192.168.10.8

  redis:
    image: 'redis:alpine'
    ports:
        - '6379:6379'
    volumes:
        - 'sawit-redis:/data'
    networks:
        sawit-backend:
          ipv4_address: 192.168.10.9
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        retries: 3
        timeout: 5s

networks:
  sawit-backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/28
          gateway: 192.168.10.1
    driver_opts:
      com.docker.network.bridge.name: sawit-backend

volumes:
  sawit-mysql:
    driver: local
  sawit-redis:
    driver: local

